# {{ ansible_managed }}
# ansibleguy.infra_haproxy

{% for name, cnf_user in HAPROXY_CONFIG.frontends.items() %}
{%    set cnf = defaults_frontend | combine(cnf_user, recursive=true) %}
frontend {{ name }}
    mode {{ cnf.mode }}
{%   for bind in cnf.bind | ensure_list %}
{%     if cnf.acme | bool %}
    bind {{ bind | regex_replace('ssl$', 'ssl crt ' + HAPROXY_HC.path.acme) }}
{%     else %}
    bind {{ bind }}
{%     endif %}
{%   endfor %}

{%   if cnf.mode == 'http' %}
{%     if cnf.ssl_redirect | bool %}
    http-request redirect scheme https unless { ssl_fc }
{%     endif %}
{%   endif %}

{%   if cnf.geoip.enable | bool %}
{% include "inc/geoip.j2" %}
{%   endif %}

{%   if cnf.log.user_agent | bool %}
    http-request capture req.fhdr(User-Agent) len 200
{%   endif %}

{%  for section, lines in cnf.lines.items() %}
    # SECTION: {{ section }}
{%    for line in lines | ensure_list %}
    {{ line }}
{%    endfor %}


{%  endfor %}


{%  for be_name, be_cnf_user in cnf.route.items() %}
{%    set be_cnf = defaults_frontend_route | combine(be_cnf_user, recursive=true) %}

    # BACKEND {{ be_name }}
    acl {{ be_name }}_domains req.hdr(host) -i {{ (be_cnf.domains | ensure_list).join(' ') }}
    acl {{ be_name }}_filter_ip {% if be_cnf.filter_ip | length > 0 %}src (be_cnf.filter_ip | ensure_list).join(' '){% else %}always_true{% endif %}
    acl {{ be_name }}_filter_not_ip {% if be_cnf.filter_not_ip | length > 0 %}src (be_cnf.filter_not_ip | ensure_list).join(' '){% else %}always_false{% endif %}
{%   if HAPROXY_CONFIG.geoip.enable | bool and cnf.geoip.enable | bool %}
{%     if cnf.geoip.country | bool %}
    acl {{ be_name }}_filter_country {% if be_cnf.filter_country | length > 0 %}var(txn.geoip_country) -i (be_cnf.filter_country | ensure_list).join(' '){% else %}always_true{% endif %}
    acl {{ be_name }}_filter_not_country {% if be_cnf.filter_not_country | length > 0 %}var(txn.geoip_country) -i (be_cnf.filter_not_country | ensure_list).join(' '){% else %}always_false{% endif %}
{%     else %}
    acl {{ be_name }}_filter_country always_true
    acl {{ be_name }}_filter_not_country always_false
{%     endif %}
{%     if cnf.geoip.asn | bool %}
    acl {{ be_name }}_filter_asn {% if be_cnf.filter_asn | length > 0 %}var(txn.geoip_asn) -i (be_cnf.filter_asn | ensure_list).join(' '){% else %}always_true{% endif %}
    acl {{ be_name }}_filter_not_asn {% if be_cnf.filter_not_asn | length > 0 %}var(txn.geoip_asn) -i (be_cnf.filter_not_asn | ensure_list).join(' '){% else %}always_false{% endif %}
{%     else %}
    acl {{ be_name }}_filter_asn always_true
    acl {{ be_name }}_filter_not_asn always_false
{%     endif %}

    use_backend {{ be_name }} if {{ be_name }}_domains {{ be_name }}_filter_ip !{{ be_name }}_filter_not_ip {{ be_name }}_filter_asn !{{ be_name }}_filter_not_asn {{ be_name }}_filter_country !{{ be_name }}_filter_not_country
{%   else %}

    use_backend {{ be_name }} if {{ be_name }}_domains {{ be_name }}_filter_ip !{{ be_name }}_filter_not_ip
{%   endif %}

{%  endfor %}

{%  if cnf.default_backend | default(none, true) is not none %}
    default_backend {{ cnf.default_backend }}
{%  endif %}

{% endfor %}