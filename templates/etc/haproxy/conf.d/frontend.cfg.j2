# {{ ansible_managed }}
# ansibleguy.infra_haproxy

{% for name, cnf_user in HAPROXY_CONFIG.frontends.items() %}
{%    set cnf = defaults_frontend | combine(cnf_user, recursive=true) %}
frontend {{ name }}
    mode {{ cnf.mode }}
{%   for bind in cnf.bind | ensure_list %}
{%     if cnf.acme.enable | bool %}
    bind {{ bind | regex_replace('ssl$', 'ssl crt ' + HAPROXY_HC.path.acme_certs) }}{% if cnf.mode == 'http' and 'ssl' in bind and cnf.http2 | bool %} alpn h2,http/1.1{% endif +%}
{%     else %}
    bind {{ bind }}{% if cnf.mode == 'http' and 'ssl' in bind and cnf.http2 | bool %} alpn h2,http/1.1{% endif +%}
{%     endif %}
{%   endfor %}

{%   if cnf.mode == 'http' %}
{%     if cnf.ssl_redirect | bool and 'ssl' in (cnf.bind | join('-')) %}
    http-request redirect scheme https code 301 if !{ ssl_fc } !{ path_beg -i /.well-known/acme-challenge/ }

{%     endif %}
{%   endif %}
{%   if cnf.geoip.enable | bool %}
{%     include "inc/geoip.j2" %}

{%   endif %}
{% if cnf.mode == 'http' %}
    http-request set-header X-Forwarded-For %[src]
{%   include "inc/security.j2" %}
{%   include "inc/security_only_fe.j2" %}

{%   if cnf.log.user_agent | bool %}
    http-request capture req.fhdr(User-Agent) len 200

{%   endif %}
{% endif %}
{%  if cnf.lines | is_dict %}
{%    for section, lines in cnf.lines.items() %}
    # SECTION: {{ section }}
{%      for line in lines | ensure_list %}
    {{ line }}
{%      endfor %}

{%    endfor %}
{%  else %}
{%    for line in cnf.lines | ensure_list %}
    {{ line }}
{%    endfor %}

{%  endif %}
{%   if cnf.acme.enable | bool %}
    use_backend be_haproxy_acme if { path_beg -i /.well-known/acme-challenge/ }

{%  endif %}
{%  for be_name, be_cnf_user in cnf.routes.items() %}
{%    set be_cnf = defaults_frontend_route | combine(be_cnf_user, recursive=true) %}
{%    set be_route = cnf | build_route(be_cnf, be_name) %}

    # BACKEND {{ be_name }}
{%    for line in be_route %}
    {{ line }}
{%    endfor %}

{%  endfor %}

{%  if cnf.default_backend | default(none, true) is not none %}
    default_backend {{ cnf.default_backend }}
{%  endif %}

{% endfor %}