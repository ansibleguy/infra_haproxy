
{% if cnf.security.restrict_methods | bool and cnf.security.allow_only_methods | length > 0 %}
    http-request deny status 405 default-errorfiles if !{ method {{ cnf.security.allow_only_methods | join(' ') }} }
{% elif cnf.security.deny_dangerous_methods | bool %}
    http-request deny status 405 default-errorfiles if { method TRACE CONNECT }
{% endif %}

{% if cnf.security.block_script_bots | bool %}
    # block well-known script-bots
{%   if HAPROXY_WAF.user_agents.script.full | length > 0 %}
  http-request deny status {{ HAPROXY_WAF.block_code }} {{ BLOCK_ERRORFILE }} if { req.fhdr(User-Agent) -m str -i -f {{ HAPROXY_HC.path.lst }}/{{ HAPROXY_HC.file.lst.bad_bot_full }} }
{%   endif %}
{%   if HAPROXY_WAF.user_agents.script.sub | length > 0 %}
    http-request deny status {{ HAPROXY_WAF.block_code }} {{ BLOCK_ERRORFILE }} if { req.fhdr(User-Agent) -m sub -i -f {{ HAPROXY_HC.path.lst }}/{{ HAPROXY_HC.file.lst.bad_bot_sub }} }
{%   endif %}
{% endif %}
{% if cnf.security.block_bad_crawler_bots | bool %}
    # block well-known bad-crawler-bots
{%   if HAPROXY_WAF.user_agents.bad_crawlers.full | length > 0 %}
    http-request deny status {{ HAPROXY_WAF.block_code }} {{ BLOCK_ERRORFILE }} if { req.fhdr(User-Agent) -m str -i -f {{ HAPROXY_HC.path.lst }}/{{ HAPROXY_HC.file.lst.crawler_full }} }
{%   endif %}
{%   if HAPROXY_WAF.user_agents.bad_crawlers.sub | length > 0 %}
    http-request deny status {{ HAPROXY_WAF.block_code }} {{ BLOCK_ERRORFILE }} if { req.fhdr(User-Agent) -m sub -i -f {{ HAPROXY_HC.path.lst }}/{{ HAPROXY_HC.file.lst.crawler_sub }} }
{%   endif %}
{% endif %}
{% if cnf.security.block_script_kiddies | bool %}
    # block script-kiddy requests
    http-request deny status {{ HAPROXY_WAF.block_code }} {{ BLOCK_ERRORFILE }} if { path -m beg -i -f {{ HAPROXY_HC.path.lst }}/{{ HAPROXY_HC.file.lst.script_kiddy_beg }} }
    http-request deny status {{ HAPROXY_WAF.block_code }} {{ BLOCK_ERRORFILE }} if { path -m end -i -f {{ HAPROXY_HC.path.lst }}/{{ HAPROXY_HC.file.lst.script_kiddy_end }} }
    http-request deny status {{ HAPROXY_WAF.block_code }} {{ BLOCK_ERRORFILE }} if { path -m sub -i -f {{ HAPROXY_HC.path.lst }}/{{ HAPROXY_HC.file.lst.script_kiddy_sub }} }
{% endif %}
{% if cnf.security.flag_bots | bool %}
    # FLAG BOTS
    ## flag bots by common user-agent substrings
    http-request set-var(txn.bot) int(1) if !{ var(txn.bot) -m found } { req.fhdr(User-Agent) -m sub -i -f {{ HAPROXY_HC.path.lst }}/{{ HAPROXY_HC.file.lst.bot_sub }} }

{%   if not cnf.security.block_script_bots | bool %}
    ## flag well-known script-bots
{%     if HAPROXY_WAF.user_agents.script.full | length > 0 %}
    http-request set-var(txn.bot) int(1) if !{ var(txn.bot) -m found } { req.fhdr(User-Agent) -m str -i -f {{ HAPROXY_HC.path.lst }}/{{ HAPROXY_HC.file.lst.bad_bot_full }} }
{%     endif %}
{%     if HAPROXY_WAF.user_agents.script.sub | length > 0 %}
    http-request set-var(txn.bot) int(1) if !{ var(txn.bot) -m found } { req.fhdr(User-Agent) -m sub -i -f {{ HAPROXY_HC.path.lst }}/{{ HAPROXY_HC.file.lst.bad_bot_sub }} }
{%     endif %}
{%   endif %}
{%   if not cnf.security.block_bad_crawler_bots | bool %}
    ## flag well-known bad-crawler-bots
{%     if HAPROXY_WAF.user_agents.bad_crawlers.full | length > 0 %}
    http-request set-var(txn.bot) int(1) if !{ var(txn.bot) -m found } { req.fhdr(User-Agent) -m str -i -f {{ HAPROXY_HC.path.lst }}/{{ HAPROXY_HC.file.lst.crawler_full }} }
{%     endif %}
{%     if HAPROXY_WAF.user_agents.bad_crawlers.sub | length > 0 %}
    http-request set-var(txn.bot) int(1) if !{ var(txn.bot) -m found } { req.fhdr(User-Agent) -m sub -i -f {{ HAPROXY_HC.path.lst }}/{{ HAPROXY_HC.file.lst.crawler_sub }} }
{%     endif %}
{%   endif %}
    ## unusual if action has no referrer; could produce false-positives in some special cases
    http-request set-var(txn.bot) int(1) if !{ var(txn.bot) -m found } !{ method GET HEAD } !{ req.hdr(Referer) -m found }
    ## browsers set these ones usually
    http-request set-var(txn.bot) int(1) if !{ var(txn.bot) -m found } !{ req.hdr(Accept-Language) -m found }
    http-request set-var(txn.bot) int(1) if !{ var(txn.bot) -m found } !{ req.fhdr(User-Agent) -m found }

{%   for line in cnf.security.flag_bots_lines %}
    {{ line }}
{%   endfor %}

    http-request set-var(txn.bot) int(0) if !{ var(txn.bot) -m found }
    http-request capture var(txn.bot) len 1

{% endif %}