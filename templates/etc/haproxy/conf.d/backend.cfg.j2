# {{ ansible_managed }}
# ansibleguy.infra_haproxy

{% for name, cnf_user in HAPROXY_CONFIG.backends.items() %}
{%   set cnf = defaults_backend | combine(cnf_user, recursive=true) %}

backend {{ name }}
    mode {{ cnf.mode }}
    balance {{ cnf.balance }}

{%  if cnf.check | bool and cnf.mode == 'http' %}
{%    if cnf.check_http | bool %}
    option httpchk
{%    endif %}
{%    if cnf.check_uri | default(none, true) is not none %}
    http-check send meth {{ cnf.check_method }} uri {{ cnf.check_uri }}
{%    endif %}
{%    if cnf.check_expect | default(none, true) is not none %}
    http-check expect {{ cnf.check_expect }}
{%    endif %}
{%  endif %}

{% include "inc/security.j2" %}

{%  if cnf.lines | is_dict %}
{%    for section, lines in cnf.lines.items() %}
    # SECTION: {{ section }}
{%      for line in lines | ensure_list %}
    {{ line }}
{%      endfor %}

{%    endfor %}
{%  else %}
    # SECTION: default
{%    for line in cnf.lines | ensure_list %}
    {{ line }}
{%    endfor %}

{%  endif %}

{%  for server in cnf.servers | ensure_list %}
    server {{ server }}{% if cnf.check | bool %} check{% endif %}{% if cnf.ssl | bool %} ssl verify {{ cnf.ssl_verify }}{% endif %}
{%  endfor %}

{% endfor %}

{% if HAPROXY_CONFIG.acme.enable | bool and HAPROXY_CONFIG.acme.manage_challenge | bool %}
backend be_haproxy_acme
    server haproxy_acme 127.0.0.1:{{ HAPROXY_CONFIG.acme.challenge_port }} check
{% endif %}
