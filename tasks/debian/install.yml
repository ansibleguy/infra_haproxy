---

- name: HAProxy | Install | Dependencies
  ansible.builtin.apt:
    pkg: ['gpg', 'curl']
    state: present

# https://haproxy.debian.net
- name: HAProxy | Install | Adding repository key
  ansible.builtin.shell: |
    set -o pipefail
    curl https://haproxy.debian.net/bernat.debian.org.gpg |
    gpg --dearmor -o /usr/share/keyrings/haproxy.debian.net.gpg
  args:
    executable: '/bin/bash'
    creates: '/usr/share/keyrings/haproxy.debian.net.gpg'
  changed_when: false
  tags: [skip_ansible_lint]  # lazy - open to PRs

- name: HAProxy | Install | Adding repository
  ansible.builtin.copy:
    content: |
      # ansible_managed
      deb [signed-by=/usr/share/keyrings/haproxy.debian.net.gpg] https://haproxy.debian.net bookworm-backports-{{ HAPROXY_CONFIG.version }} main
    dest: '/etc/apt/sources.list.d/haproxy-community.list'
    mode: 0644

- name: "HAProxy | Install | APT Update"
  ansible.builtin.apt:
    update_cache: true

- name: "HAProxy | Install | Checking for Version {{ HAPROXY_CONFIG.version }}"
  ansible.builtin.apt:
    pkg: "haproxy={{ HAPROXY_CONFIG.version }}*"
    state: present
  check_mode: true
  register: haproxy_pkg

# NOTE: might not work if upgrade for multiple hosts should be performed in one run
- name: "HAProxy | Install | Ask user"
  ansible.builtin.pause:
    prompt: "Do you want to install/update the HAProxy package?"
  register: haproxy_pkg_prompt
  when:
    - not no_prompts | bool
    - haproxy_pkg.changed

- name: "HAProxy | Install | Version {{ HAPROXY_CONFIG.version }}"
  ansible.builtin.apt:
    pkg: "haproxy={{ HAPROXY_CONFIG.version }}*"
    state: present
  when:
    - haproxy_pkg.changed
    - no_prompts | bool or haproxy_pkg_prompt.user_input | bool

- name: HAProxy | Install | Create directories
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: 'root'
    group: 'haproxy'
    mode: 0750
  loop:
    - "{{ HAPROXY_HC.path.config }}"
    - "{{ HAPROXY_HC.path.map }}"
    - "{{ HAPROXY_HC.path.lst }}"
    - "{{ HAPROXY_HC.path.lua }}"
    - '/tmp/haproxy'

- name: HAProxy | Install | Create service-override directory
  ansible.builtin.file:
    path: '/etc/systemd/system/haproxy.service.d'
    state: directory
    owner: 'root'
    group: 'root'
    mode: 0755

# validate config before start/reload
#   log errors and keep us from killing the active process with invalid config
# add conf.d as config source
- name: HAProxy | Install | Create service-override
  ansible.builtin.template:
    src: 'templates/etc/systemd/system/haproxy.service.d/override.conf.j2'
    dest: '/etc/systemd/system/haproxy.service.d/override.conf'
    owner: 'root'
    group: 'root'
    mode: 0644
  notify: HAProxy-restart
  register: hap_svc_ovr

- name: HAProxy | Install | Systemd Daemon-reload
  ansible.builtin.systemd:
    daemon_reload: true
  when: hap_svc_ovr.changed

- name: HAProxy | Install | Enable Service
  ansible.builtin.systemd:
    name: 'haproxy.service'
    enabled: true

- name: HAProxy | Install | Download SSL-Fingerprint plugin (JA3N)
  ansible.builtin.get_url:
    url: "{{ HAPROXY_HC.url.ja3n_script }}"
    dest: "{{ HAPROXY_HC.path.lua }}/ja3n.lua"
    owner: 'root'
    group: 'haproxy'
    mode: 0750
  tags: lua

- name: HAProxy | Install | Download SSL-Fingerprint plugin (JA4)
  ansible.builtin.get_url:
    url: "{{ HAPROXY_HC.url.ja4_script }}"
    dest: "{{ HAPROXY_HC.path.lua }}/ja4.lua"
    owner: 'root'
    group: 'haproxy'
    mode: 0750
  tags: lua

# todo: opt-in for JA4-DB lookups + map update service (https://github.com/O-X-L/haproxy-ja4)
