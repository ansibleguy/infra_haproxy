---

no_prompts: false
debug: false
force_update: false

# default config => is overwritten by provided config
defaults_haproxy:
  version: '2.8'
  frontends: {}
  backends: {}

  # see: https://www.haproxy.com/blog/exploring-the-haproxy-stats-page
  stats:
    http: false
    bind: '127.0.0.1:8404'
    refresh: '10s'
    admin: false
    admin_if: 'LOCALHOST'
    user: 'haproxy'
    pwd: 'monitor'
    realm: 'Authorized Personal Only'

  geoip:
    enable: false
    manage_db: true
    provider: 'ipinfo'
    token:

  global:
    log:
      - '/dev/log    local0'
      - '/dev/log    local1 notice'
    chroot: '/var/lib/haproxy'
    'stats socket': '/run/haproxy/admin.sock mode 660 level admin'
    'stats timeout': '30s'
    ca-base: '/etc/ssl/certs'
    crt-base: '/etc/ssl/private'
    ssl-default-bind-ciphers: 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384'
    ssl-default-bind-ciphersuites: 'TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256'
    ssl-default-bind-options: 'ssl-min-ver TLSv1.2 no-tls-tickets'

  defaults:
    log: 'global'
    mode: 'http'
    option:
      - 'httplog'
      - 'dontlognull'
    'timeout connect': 5000
    'timeout client': 50000
    'timeout server': 50000
    'errorfile 400': '/etc/haproxy/errors/400.http'
    'errorfile 403': '/etc/haproxy/errors/403.http'
    'errorfile 408': '/etc/haproxy/errors/408.http'
    'errorfile 500': '/etc/haproxy/errors/500.http'
    'errorfile 502': '/etc/haproxy/errors/502.http'
    'errorfile 503': '/etc/haproxy/errors/503.http'
    'errorfile 504': '/etc/haproxy/errors/504.http'


defaults_frontend:
  mode: 'http'
  bind: ['[::]:80 v4v6']
  # ipv4 only: ':80'
  # ssl with acme enabled: ':443 ssl'
  # ssl with custom cert: ':443 ssl crt /etc/ssl/haproxy/site.pem'
  acme: false
  ssl_redirect: true
  log:
    user_agent: true

  geoip:
    enable: false
    country: true
    asn: true
    asn_name: false

  lines: {}  # raw config lines to add - section to lines mapping to make resulting config human-readable

  route: {}
  #  backend_name:
  #     domains: ['hostname1', 'hostname2']
  #     filter_country: ['AT', 'DE', 'CH']
  #     filter_not_country: []
  #     filter_asn: [13335]
  #     filter_not_asn: []
  #     filter_ip: ['10.0.0.0/8']
  #     filter_not_ip: []

  default_backend:

defaults_frontend_route:
  domains: []
  filter_country: []
  filter_not_country: []
  filter_asn: []
  filter_not_asn: []
  filter_ip: []
  filter_not_ip: []

defaults_backend:
  mode: 'http'
  balance: 'leastconn'

  lines: {}  # raw config lines to add - section to lines mapping to make resulting config human-readable

  servers: []
  ssl: false
  ssl_verify: 'none'  # example: 'required ca-file /etc/ssl/certs/my_ca.crt verifyhost host01.intern'

  # for health-checks see: https://www.haproxy.com/blog/how-to-enable-health-checks-in-haproxy
  #   more complex ones should be implemented by supplying the raw config-lines
  check: true
  check_method: 'GET'
  check_uri:
  check_expect:
